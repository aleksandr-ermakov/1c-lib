
// Формирует список повторов элемента планировщика по расписанию. 
//
// Параметры:
//  ЭлементПланировщика	 - ЭлементПланировщика	 - Элемент планировщика.
//  					 - Структура			 - Имитация элемента планировщика. Элементы:
//   * Расписание - РасписаниеЭлементаПланировщика - Расписание элемента планировщика 
//   * Начало	 - Дата - Дата начала элемента планировщика
//   * Конец	 - Дата - Дата окончания элемента планировщика 
//  НачалоПериода		 - Дата	 - Дата начала интервала повторов. 
//  КонецПериода		 - Дата	 - Дата окончания интервала повторов. 
// 
// Возвращаемое значение:
//  Соответствие из КлючИЗначение- Соответствие дат повторов.
//  	Если расписание не задано, то возвращаемое соответствие будет содержать только один элемент - исходное событие. 
//  	Если повторов в расписании нет, то пустое соответствие. Элементы:
//  	* Ключ		 - Дата - Дата начала повтора.
//  	* Значение	 - Дата - Дата окончания повтора. 
//
Функция ПовторыЭлементаПланировщикаПоРасписанию(ЭлементПланировщика, НачалоПериода = Неопределено, КонецПериода = Неопределено) Экспорт
	
	Повторы = Новый Соответствие;
	
	Если Ложь Тогда 
		ЭлементПланировщика = Новый ЭлементПланировщика;
	КонецЕсли;
	
	Расписание	 = ЭлементПланировщика.Расписание;
	Начало		 = ЭлементПланировщика.Начало;
	Конец		 = ЭлементПланировщика.Конец;
	ВремяНачало	 = Начало - НачалоДня(Начало);
	Длительность = Конец - Начало;
	
	ЕстьРасписание = (Расписание <> Неопределено);
	Если Не ЕстьРасписание Тогда
		Если (НачалоПериода = Неопределено Или Начало >= НачалоПериода)
			И (КонецПериода = Неопределено Или Конец <= КонецПериода) Тогда
			Повторы.Вставить(Начало, Конец);
		КонецЕсли;
		Возврат Повторы;
	КонецЕсли;
	
	ЕстьПериодичностьПоДням		 = ЗначениеЗаполнено(Расписание.ПериодПовтораДней);
	ЕстьПериодичностьПоНеделям	 = ЗначениеЗаполнено(Расписание.ПериодНедель);
	ЕстьПериодичностьПоМесяцам	 = ЗначениеЗаполнено(Расписание.ПериодМесяцев);
	ЕстьПериодичностьПоГодам	 = ЗначениеЗаполнено(Расписание.ПериодЛет);
	
	ЕстьПериодичность = ЕстьПериодичностьПоДням Или ЕстьПериодичностьПоНеделям Или ЕстьПериодичностьПоМесяцам Или ЕстьПериодичностьПоГодам;
	Если Не ЕстьПериодичность Тогда
		Возврат Повторы;	// Пустая коллекция.
	КонецЕсли;
	
	ПовторятьКаждыйДень		 = Расписание.ПериодПовтораДней = 1;
	ПовторятьКаждуюНеделю	 = Расписание.ПериодНедель = 1;
	ПовторятьКаждыйМесяц	 = Расписание.ПериодМесяцев = 1;
	ПовторятьКаждыйГод		 = Расписание.ПериодЛет = 1;
	
	ЕстьОграничениеПоДнямНедели			 = ЗначениеЗаполнено(Расписание.ДниНедели) и Расписание.ДниНедели.Количество() <> 7;
	ЕстьОграничениеПоМесяцам			 = ЗначениеЗаполнено(Расписание.Месяцы) и Расписание.Месяцы.Количество() <> 12;
	ЕстьОграничениеПоДнямМесяца			 = Расписание.ДеньВМесяце <> 0;
	ЕстьОграничениеПоДнямНеделиВМесяце	 = Расписание.ДеньНеделиВМесяце <> 0;	

	ПовторятьБезОграничений = ПовторятьКаждыйДень
		И (Не ЕстьПериодичностьПоНеделям Или ПовторятьКаждуюНеделю)
		И (Не ЕстьПериодичностьПоМесяцам Или ПовторятьКаждыйМесяц)
		И (Не ЕстьПериодичностьПоГодам Или ПовторятьКаждыйГод)
		И Не ЕстьОграничениеПоДнямНедели
		И Не ЕстьОграничениеПоМесяцам
		И Не ЕстьОграничениеПоДнямМесяца
		И Не ЕстьОграничениеПоДнямНеделиВМесяце;
			
	День = 60*60*24;
	Неделя = День * 7;
	
	НаличиеПовторовПоНеделям = Новый Соответствие; // Для проверки наличия повторов по неделям. {Число - Номер недели; Булево - Истина}
	НаличиеПовторовПоМесяцам = Новый Соответствие; // Для проверки наличия повторов по месяцам. {Число - Номер месяца; Булево - Истина}
	НаличиеПовторовПоГодам = Новый Соответствие;	 // Для проверки наличия повторов по годам. {Число - Номер года; Булево - Истина}
	
	ТекущийДень = НачалоДня(Начало);
	ТекущийМесяц = Неопределено;
	НомерДняМесяца = День(ТекущийДень);	// Для проверки периодичности по месяцам, и смещения даты повтора при необходимости.
	ДеньГода = ТекущийДень;	// Для проверки периодичности по годам.
	ИндексМесяца = -1; // Для контроля периодичности по месяцам.
	ИндексГода = -1;	// Для контроля периодичности по годам.
	КоличествоПовторов = 0;
	Смещение = 0;
	Пока Истина Цикл
		
		Если Месяц(ТекущийДень) <> ТекущийМесяц Тогда
			
			ТекущийМесяц = НачалоМесяца(ТекущийДень);
			ИндексМесяца = (Год(ТекущийДень) - Год(Начало)) * 12 + Месяц(ТекущийДень) - Месяц(Начало);
			ИндексГода = Год(ТекущийДень) - Год(Начало);
			
			Если ЕстьОграничениеПоДнямМесяца Тогда
				Если Расписание.ДеньВМесяце < 0 Тогда
					ДеньВМесяце = День(КонецМесяца(ТекущийМесяц)) + Расписание.ДеньВМесяце + 1;
				Иначе
					ДеньВМесяце = Расписание.ДеньВМесяце;
				КонецЕсли;
			КонецЕсли;
			
			Если ЕстьОграничениеПоДнямНеделиВМесяце Тогда
				Если Расписание.ДеньНеделиВМесяце < 0 Тогда
					НедельВМесяце = День(КонецМесяца(ТекущийМесяц)) / 7;
					НедельВМесяце = Цел(НедельВМесяце) + Число(Булево(НедельВМесяце % 1));
					ДеньНеделиВМесяце = НедельВМесяце + Расписание.ДеньНеделиВМесяце + 1;
				Иначе
					ДеньНеделиВМесяце = Расписание.ДеньНеделиВМесяце;
				КонецЕсли;
				НачалоНеделиВМесяце = ТекущийМесяц + (ДеньНеделиВМесяце - 1) * Неделя;
				КонецНеделиВМесяце = НачалоНеделиВМесяце + Неделя - 1;
			КонецЕсли;
			
		КонецЕсли;
		
		ДобавитьПовтор = Ложь;
		Пока Истина Цикл
			
			Если ПовторятьБезОграничений Тогда
				ДобавитьПовтор = Истина;
				Прервать; // Пропуск всех дальнейших проверок
			КонецЕсли;
			
			Если ЕстьОграничениеПоДнямНедели И расписание.ДниНедели.Найти(ДеньНедели(ТекущийДень)) = Неопределено Тогда
				Прервать;
			КонецЕсли;
			Если ЕстьОграничениеПоМесяцам И Расписание.Месяцы.Найти(Месяц(ТекущийДень)) = Неопределено Тогда
				Прервать;
			КонецЕсли;
			Если ЕстьОграничениеПоДнямМесяца И День(ТекущийДень) <> ДеньВМесяце  Тогда
				Прервать;
			КонецЕсли;
			Если ЕстьОграничениеПоДнямНеделиВМесяце И Не (НачалоНеделиВМесяце <= ТекущийДень И ТекущийДень <= КонецНеделиВМесяце) Тогда
				Прервать;
			КонецЕсли;
			
			Если ЕстьПериодичностьПоДням И Не ПовторятьКаждыйДень И Смещение % (День * Расписание.ПериодПовтораДней) <> 0 Тогда
				Прервать;
			КонецЕсли;
			
			Если ЕстьПериодичностьПоНеделям Тогда
				Если ПовторятьКаждуюНеделю И ЕстьПериодичностьПоДням Тогда
					// Повторяется всегда 
				Иначе
	 				Если ЕстьПериодичностьПоДням Тогда
	 					ИндексНедели = Цел((НачалоНедели(ТекущийДень) - НачалоНедели(Начало)) / Неделя);
						Если ИндексНедели % Расписание.ПериодНедель <> 0 Тогда
							Прервать;
						КонецЕсли;
					Иначе
						ИндексНедели = Цел(Смещение / Неделя);
						Если Смещение % (Неделя * Расписание.ПериодНедель) <> 0 Тогда
							Прервать;
						КонецЕсли;
					КонецЕсли;
					Если Не ПовторятьКаждуюНеделю И НаличиеПовторовПоНеделям[ИндексНедели] <> Неопределено Тогда
						Прервать;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			Если ЕстьПериодичностьПоМесяцам Тогда
				Если ПовторятьКаждыйМесяц И (ЕстьПериодичностьПоНеделям Или ЕстьПериодичностьПоДням) Тогда
					// Месяц не контролируется. 
				Иначе
					Если ИндексМесяца % Расписание.ПериодМесяцев <> 0 Тогда
						Прервать;
					КонецЕсли;
					Если Не ЕстьПериодичностьПоНеделям И Не ЕстьПериодичностьПоДням Тогда
						Если НомерДняМесяца > День(КонецМесяца(ТекущийДень)) Тогда
							НомерДняМесяца = НомерДняМесяца - День(КонецМесяца(ТекущийДень)); // Если день повтора выпадает на 30 февраля, то повтор и дальнейшие повторы переносятся на 1-2 марта.
							НаличиеПовторовПоМесяцам[ИндексМесяца] = Истина;	// Чтобы больше не было повторов в этот месяц.
							Прервать;
						КонецЕсли;
						Если День(ТекущийДень) <> НомерДняМесяца Тогда
							Прервать;
						КонецЕсли;
					КонецЕсли;
					Если НаличиеПовторовПоМесяцам[ИндексМесяца] <> Неопределено Тогда
						Прервать;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			Если ЕстьПериодичностьПоГодам Тогда
				Если ПовторятьКаждыйГод И (ЕстьПериодичностьПоМесяцам Или ЕстьПериодичностьПоНеделям Или ЕстьПериодичностьПоДням) Тогда
					// Год не контролируется. 
				Иначе
					Если ИндексГода % Расписание.ПериодЛет <> 0 Тогда
						Прервать;
					КонецЕсли;
					Если Не ЕстьПериодичностьПоМесяцам И Не ЕстьПериодичностьПоНеделям И Не ЕстьПериодичностьПоДням Тогда
						Если Месяц(ДеньГода) = Месяц(ТекущийДень) И День(ДеньГода) > День(КонецМесяца(ТекущийДень)) Тогда
							ДеньГода = КонецМесяца(ТекущийДень) + 1;	// Если день повтора выпадает на 29 февраля, то повтор и дальнейшие повторы переносятся на 1 марта.
							НаличиеПовторовПоГодам[ИндексГода] = Истина;	// Чтобы больше не было повторов в этот год.
							Прервать;
						КонецЕсли;
						Если День(ТекущийДень) <> День(ДеньГода) Или Месяц(ТекущийДень) <> Месяц(ДеньГода) Тогда
							Прервать;
						КонецЕсли;
					КонецЕсли;
					Если НаличиеПовторовПоГодам[ИндексГода] <> Неопределено Тогда
						Прервать;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;

			ДобавитьПовтор = Истина;
			Прервать;
			
		КонецЦикла;
		
		Если ДобавитьПовтор Тогда
			
			НачалоПовтора = ТекущийДень + ВремяНачало;
			КонецПовтора = НачалоПовтора + Длительность;
			Если ЗначениеЗаполнено(Расписание.ДатаКонца) И Расписание.ДатаКонца < НачалоПовтора Тогда
				Прервать;
			КонецЕсли;
			Если (НачалоПериода = Неопределено Или НачалоПериода <= НачалоПовтора) И (КонецПериода = Неопределено
				Или КонецПериода >= НачалоПовтора) Тогда
				Повторы.Вставить(НачалоПовтора, КонецПовтора);
			КонецЕсли;
			КоличествоПовторов = КоличествоПовторов + 1;
			Если ЗначениеЗаполнено(Расписание.КоличествоПовторов) И КоличествоПовторов >= Расписание.КоличествоПовторов Тогда
				Прервать;
			КонецЕсли;

			Если Не ПовторятьБезОграничений Тогда
				Если ЕстьПериодичностьПоНеделям Тогда
					НаличиеПовторовПоНеделям[ИндексНедели] = Истина;
				КонецЕсли;
				Если ЕстьПериодичностьПоМесяцам Тогда
					НаличиеПовторовПоМесяцам[ИндексМесяца] = Истина;
				КонецЕсли;
				Если ЕстьПериодичностьПоГодам Тогда
					НаличиеПовторовПоГодам[ИндексГода] = Истина;
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
		
		ТекущийДень = ТекущийДень + День;
		Смещение = Смещение + День;
		Если ЗначениеЗаполнено(КонецПериода) И ТекущийДень > КонецПериода Тогда
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
		
	#Область ЗамещающиеЭлементыПланировщика
	ЕстьЗамещающиеЭлементы = Ложь;
	Если ТипЗнч(ЭлементПланировщика) = Тип("ЭлементПланировщика") Тогда
		ЕстьЗамещающиеЭлементы = ЕстьРасписание 
			И ЗначениеЗаполнено(ЭлементПланировщика.ЗамещающиеЭлементы);
	ИначеЕсли ТипЗнч(ЭлементПланировщика) = Тип("Структура") Тогда
		ЕстьЗамещающиеЭлементы = ЕстьРасписание
			И ЭлементПланировщика.Свойство("ЗамещающиеЭлементы")
			И ЗначениеЗаполнено(ЭлементПланировщика.ЗамещающиеЭлементы);
	Иначе
		ЕстьЗамещающиеЭлементы = Ложь;
	КонецЕсли;
	Если ЕстьЗамещающиеЭлементы Тогда
		ЗамещающиеЭлементы = ЭлементПланировщика.ЗамещающиеЭлементы;
		ЗамещаемыеДаты = Новый Массив;	// Отдельно, чтобы избежать замещения уже замещенного повтора.
		Для Каждого Повтор Из Повторы Цикл
			ЗамещаемыеДаты.Добавить(Повтор.Ключ);
		КонецЦикла;
		Для каждого ЗамещаемаяДата Из ЗамещаемыеДаты Цикл
			ЗамещающийЭлемент = ЗамещающиеЭлементы.Найти(ЗамещаемаяДата);
			Если ЗамещающийЭлемент <> Неопределено Тогда
				Если Не ЗамещающийЭлемент.Удаленный Тогда
					Если (НачалоПериода = Неопределено Или НачалоПериода <= ЗамещающийЭлемент.Начало) 
						Или (КонецПериода = Неопределено Или КонецПериода >= ЗамещающийЭлемент.Начало) Тогда
						Повторы.Вставить(ЗамещающийЭлемент.Начало, ЗамещающийЭлемент.Конец);
					КонецЕсли;
				КонецЕсли;
				Повторы.Удалить(ЗамещаемаяДата);
			КонецЕсли;
		КонецЦикла; 
	КонецЕсли;
	#КонецОбласти // ЗамещающиеЭлементыПланировщика
	
	Возврат Повторы;

КонецФункции // ДатыПовторовЭлементаПланировщика()