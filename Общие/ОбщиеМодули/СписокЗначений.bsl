// Добавляет в список элементы другого списка.
//
// Параметры:
//  ДополняемыйСписок  - СписокЗначений  - Список, который будет дополнен.
//  ДополняющийСписок  - СписокЗначений  - Дополняющий список.
//  Пометка      - Булево, Неопределено  - Значение пометки для добавляемых элементов. Если Неопределено - пометка будет взята из дополняющего списка.
//  УдалятьОтсутствующие  - Булево    - Если Истина, элементы обновляемого списка, отсутствующие в дополняющем списке, будут удалены.
//  ОбновлятьПредставления  - Булево    - Если Истина, представления дополняемого списка, существующие в дополняющем списке, будут обновлены.
//
Процедура ДополнитьСписокЗначений(ДополняемыйСписок, ДополняющийСписок, Пометка = Неопределено, УдалятьОтсутствующие = Ложь, ОбновлятьПредставления = Истина, ОбновлятьПометки = Ложь) Экспорт

	Если УдалятьОтсутствующие Тогда
		Удаляемые = Новый Массив;
		Для каждого Элемент Из ДополняемыйСписок Цикл
			Если ДополняющийСписок.НайтиПоЗначению(Элемент.Значение) = Неопределено Тогда
				Удаляемые.Добавить(Элемент);
			КонецЕсли;
		КонецЦикла;
		Для каждого Элемент Из Удаляемые Цикл
			ДополняемыйСписок.Удалить(Элемент);
		КонецЦикла;
	КонецЕсли;

	Для каждого ДополняющийЭлемент Из ДополняющийСписок Цикл
		ОбновляемыйЭлемент = ДополняемыйСписок.НайтиПоЗначению(ДополняющийЭлемент.Значение);
		Если ОбновляемыйЭлемент = Неопределено Тогда
			ДополняемыйСписок.Добавить(ДополняющийЭлемент.Значение, ДополняющийЭлемент.Представление, ?(Пометка = Неопределено, ДополняющийЭлемент.Пометка, Пометка));
			Продолжить;
		Иначе
			Если ОбновлятьПредставления Тогда
				ОбновляемыйЭлемент.Представление = ДополняющийЭлемент.Представление;
			КонецЕсли;
			Если ОбновлятьПометки Тогда
				ОбновляемыйЭлемент.Пометка = ДополняющийЭлемент.Пометка;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры // ДополнитьСписокЗначений()
