// Модуль для работы с базой через COMОбъект("V83.ComConnector")

#Область OneScript

// BSLLS:NumberOfOptionalParams-off
// BSLLS:UsingObjectNotAvailableUnix-off

#КонецОбласти // OneScript

#Область Конструкторы

// Создает объект, для которого предусмотрен конструктор, и возвращает ссылку на него.
// Обёртка метода NewObject()
//
// Параметры:
//	Соединение				 - COMОбъект	 - Внешнее соединение. 
//	ИмяТипа					 - Строка		 - Имя типа создаваемого объекта.
//	Параметр1				 - Массив		 - Массив параметров, используемых в конструкторе объекта.
//							 - Произвольынй	 - Параметр, передаваемый в конструктор объекта.
//	Параметр2..ПараметрN	 - Произвольынй	 - Параметр, передаваемый в конструктор объекта.
//											При передаче значений параметров, должно быть ПараметрN <> Неопределено.
//											Если необходимо передать Неопределено последним параметром, 
//											следует использовать Массив.
//
// Возвращаемое значение:
//	COMОбъект - Созданный объект.
//
Функция НовыйОбъект(
	Соединение, 
	ИмяТипа, 
	Параметр1 = Неопределено,
	Параметр2 = Неопределено,
	Параметр3 = Неопределено,
	Параметр4 = Неопределено,
	Параметр5 = Неопределено) Экспорт

	ВсегоПараметров = 5;

	Если ТипЗнч(Параметр1) = Тип("Массив") Тогда

		Параметры = Параметр1;
		Аргументы = Новый Массив;
		Аргументы.Добавить("ИмяТипа");
		Для Индекс = 0 По Параметры.ВГраница() Цикл
			Аргументы.Добавить(СтрШаблон("Параметры[%1]", XMLСтрока(Индекс)));
		КонецЦикла;
		Выражение = СтрШаблон("Соединение.NewObject(%1)", СтрСоединить(Аргументы, ", "));
		НовыйОбъект = Вычислить(Выражение);
		
	Иначе

		ЭффективныхПараметров = 0;
		Для ОбратныйНомерПараметра = - ВсегоПараметров По - 1 Цикл
			НомерПараметра = - ОбратныйНомерПараметра;
			Если Вычислить("Параметр" + НомерПараметра) <> Неопределено Тогда
				ЭффективныхПараметров = НомерПараметра;
			КонецЕсли;
		КонецЦикла;

		Если ЭффективныхПараметров = 0 Тогда
			НовыйОбъект = Соединение.NewObject(ИмяТипа);
		Иначе
			СоставСтрокиПараметры = Новый Массив;
			Для НомерПараметра = 1 По ЭффективныхПараметров Цикл
				СоставСтрокиПараметры.Добавить("Параметр" + НомерПараметра);
			КонецЦикла;
			Выражение = СтрШаблон("Соединение.NewObject(ИмяТипа, %1)", СтрСоединить(СоставСтрокиПараметры, ", "));
			НовыйОбъект = Вычислить(Выражение);
		КонецЕсли;
		
	КонецЕсли;

	Возврат НовыйОбъект; 
	
КонецФункции

// Создает внешнее соединение.
//
// Параметры:
//	СтрокаСоединения - Строка - Строка, задающая параметры информационной базы. (см. Строка соединения).
//
// Возвращаемое значение:
//	COMОбъект - Внешнее соединение.
//
Функция НовыйСоединение(СтрокаСоединения = "") Экспорт
	
	Соединение =  Новый COMОбъект("V83.ComConnector");
	Если Не ПустаяСтрока(СтрокаСоединения) Тогда
		Подключить(Соединение, СтрокаСоединения);
	КонецЕсли;

	Возврат Соединение;

КонецФункции

// Создает соединение с серверной базой.
//
// Параметры:
//	Сервер		 - Строка - Имя кластера серверов.
//	База		 - Строка - Имя базы в класетер серверов.
//	Пользователь - Строка - Имя пользователя.
//	Пароль		 - Строка - Пароль пользователя.
//
// Возвращаемое значение:
//	COMОбъект - Созданный объект.
//
Функция СтрокаСоединенияСервернаяБаза(Сервер, База, Пользователь = "", Пароль = "")

	СтрокаСоединения = СтрокаСоединенияСервернаяБаза(Сервер, База, Пользователь, Пароль);
	Возврат НовыйСоединение(СтрокаСоединения);

КонецФункции

// Создает соединение с файловой базой.
//
// Параметры:
//	Путь		 - Строка - Путь к информационной базе.
//	Пользователь - Строка - Имя пользователя.
//	Пароль		 - Строка - Пароль пользователя.
//
// Возвращаемое значение:
//	COMОбъект - Созданный объект.
//
Функция НовыйСоединениеФайловаяБаза(Путь, Пользователь = "", Пароль = "") Экспорт
	
	СтрокаСоединения = СтрокаСоединенияФайловаяБаза(Путь, Пользователь, Пароль);
	Возврат НовыйСоединение(СтрокаСоединения);

КонецФункции

Функция НовыйУникальныйИдентификатор(Соединение, Идентификатор = Неопределено) Экспорт
	
	Если Идентификатор <> Неопределено Тогда
		Возврат Соединение.NewObject("УникальныйИдентификатор", Строка(Идентификатор));
	КонецЕсли;

	Возврат Соединение.NewObject("УникальныйИдентификатор");

КонецФункции

#КонецОбласти // Конструкторы

// Получает строковое представление значения произвольного типа.
// Обёртка метода String().
//
// Параметры: 
//	Соединение	 - COMОбъект	 - Внешнее соединение. 
//	Значение	 - Произвольный	 - Выражение произвольного типа.
//
// Возвращаемое значение:
//	Строка
//
Функция ЗначениеСтрокой(Соединение, Значение) Экспорт
	Возврат Соединение.String(Значение);	
КонецФункции

// Устанавливает соединение с информационной базой 1С:Предприятия 8.
// Обёртка метода Connect(). 
//
// Параметры:
//	Соединение		 - COMОбъект - Внешнее соединение. 
//	СтрокаСоединения - Строка	 - Строка, задающая параметры информационной базы. (см. Строка соединения).
//
// Возвращаемое значение:
//	COMОбъект - Внешнее соединение.
//
Функция Подключить(Соединение, СтрокаСоединения) Экспорт
	Возврат Соединение.Connect(СтрокаСоединения);
КонецФункции

#Область СлужебныеПроцедурыИФункции

// Формирует строку соединения с файловой базой.
//
// Параметры: 
//	Путь		 - Строка - Путь к информационной базе.
//	Пользователь - Строка - Имя пользователя.
//	Пароль		 - Строка - Пароль пользователя.
//
// Возвращаемое значение:
//	Строка - Строка соединения.
//
Функция СтрокаСоединенияФайловаяБаза(Путь, Пользователь = "", Пароль = "")
	
	СоставСтроки = Новый Массив;
	СоставСтроки.Добавить(СтрШаблон("File=""%1""", Путь));

	Если Не ПустаяСтрока(Пользователь) Тогда
		СоставСтроки.Добавить("Usr=""%1""", Пользователь);

		Если Не ПустаяСтрока(Пароль) Тогда
			СоставСтроки.Добавить("Pwd=""%1""", Пароль);
		КонецЕсли;

	КонецЕсли;

	СтрокаСоединения = СтрСоединить(СоставСтроки, "; ");
	Возврат СтрокаСоединения;

КонецФункции

// Формирует строку соединения с серверной базой.
//
// Параметры: 
//	Сервер		 - Строка - Имя кластера серверов.
//	База		 - Строка - Имя базы в класетер серверов.
//	Пользователь - Строка - Имя пользователя.
//	Пароль		 - Строка - Пароль пользователя.
//
// Возвращаемое значение:
//	Строка - Строка соединения.
//
Функция СтрокаСоединенияСервернаяБаза(Сервер, База, Пользователь = "", Пароль = "")
	
	СоставСтроки = Новый Массив;
	СоставСтроки.Добавить(СтрШаблон("Srvr=""%1""", Сервер));
	СоставСтроки.Добавить(СтрШаблон("Ref=""%1""", База));
	
	Если Не ПустаяСтрока(Пользователь) Тогда
		СоставСтроки.Добавить("Usr=""%1""", Пользователь);

		Если Не ПустаяСтрока(Пароль) Тогда
			СоставСтроки.Добавить("Pwd=""%1""", Пароль);
		КонецЕсли;

	КонецЕсли;

	СтрокаСоединения = СтрСоединить(СоставСтроки, "; ");
	Возврат СтрокаСоединения;

КонецФункции

#КонецОбласти // СлужебныеПроцедурыИФункции