
#Область БуферОбмена

// Асинхронная функция. Помещает переданный текст в буфер обмена.
//
// Параметры:
//  Текст				 - Строка	 - Помещаемый текст.
//  ПоказатьОповещение	 - Булево	 - Если текст удалось поместить в буфер, показывается оповещение.
//  Заголовок			 - Строка	 - Заголовок оповещения.
//  Пояснение			 - Булево	 - Показать помещенный текст (его фрагмент).
//						 - Строка	 - Отображаемое пояснение.
// 
// Возвращаемое значение:
//  Обещание - Результат выполнения обещания - Булево. Истина, если текст удалось поместить в буфер.
//
Асинх Функция ПоместитьТекстВБуферОбменаАсинх(
	Знач Текст, 
	ПоказатьОповещение = Ложь, 
	Заголовок = "Скопировано", 
	Знач Пояснение = Истина) Экспорт 
	
	ДанныеПомещены = Ложь;
	
	ФорматДанных = СтандартныйФорматДанныхБуфераОбмена.Текст;
	Если СредстваБуфераОбмена.ИспользованиеДоступно()
		И СредстваБуфераОбмена.ПоддерживаетсяФорматДанных(ФорматДанных) Тогда
		ЭлементБуфера = Новый ЭлементБуфераОбмена(ФорматДанных, Текст);
		ДанныеПомещены = Ждать СредстваБуфераОбмена.ПоместитьДанныеАсинх(ЭлементБуфера);
	КонецЕсли;   
	
	Если ДанныеПомещены И ПоказатьОповещение Тогда  
		Если ТипЗнч(Пояснение) = Тип("Булево") Тогда  
			ПоказатьПомещаемыйТекст = Пояснение;
			Если ПоказатьПомещаемыйТекст Тогда
				ДлинаПревью = 50;      
				СимволТроеточие = "…";
				ПояснениеОповещения = ?(
					СтрДлина(Текст) > ДлинаПревью, 
					Лев(Текст, ДлинаПревью - СтрДлина(СимволТроеточие)) + СимволТроеточие,
					Текст
				);
			Иначе
				ПояснениеОповещения = "Текст скопирован в буфер обмена";		
			КонецЕсли;
		ИначеЕсли ТипЗнч(Пояснение) = Тип("Строка") Тогда
			ПояснениеОповещения = Пояснение;
		Иначе
			ВызватьИсключение "Параметр Пояснение: Неожиданный тип значения";
		КонецЕсли;
		КартинкаОповещения = БиблиотекаКартинок.ВыполнитьЗадачу;	// Папка с креплением и галкой.	
		ЗаголовокОповещения = Заголовок;
		ПоказатьОповещениеПользователя(ЗаголовокОповещения, , ПояснениеОповещения, КартинкаОповещения);
		Возврат Истина;
	КонецЕсли;
	
	Возврат ДанныеПомещены;

КонецФункции    

// Асинхронная функция. Помещает текст из буфера обмена.
// 
// Возвращаемое значение:
//  Обещание - Результат выполнения обещания:
//		* Строка		 - Полученный текст;
//		* Неопределено	 - Если буфер обмена не содержит текста.
//
Асинх Функция ПолучитьТекстИзБуфераОбменаАсинх() Экспорт
	  
	Перем Текст;
	
	ФорматДанных = СтандартныйФорматДанныхБуфераОбмена.Текст;
	Если СредстваБуфераОбмена.ИспользованиеДоступно()
		И СредстваБуфераОбмена.ПоддерживаетсяФорматДанных(ФорматДанных) Тогда
		Текст = Ждать СредстваБуфераОбмена.ПолучитьДанныеАсинх(ФорматДанных);
	КонецЕсли;   
	
	Возврат Текст;	
	  
КонецФункции


// Копирует текст в буфер обмена
// Начиная с версии платформы 8.3.24 см. СредстваБуфераОбмена
//
// Параметры:
//	Текст - Строка - Копируемый текст
//
Процедура ПоместитьТекстВБуферОбмена(Текст) Экспорт

	БуферОбмена = Новый COMОбъект("htmlfile");
	БуферОбмена.ParentWindow.ClipboardData.Setdata("Text", Текст);

КонецПроцедуры // ПоместитьТекстВБуферОбмена()
 
// Получает текст из буфера обмена
// Начиная с версии платформы 8.3.24 см. СредстваБуфераОбмена
//
// Параметры:
//	Текст - Строка - Получаемый текст
//
Функция ПолучитьТекстИзБуфераОбмена() Экспорт

	БуферОбмена = Новый COMОбъект("htmlfile");
	Возврат БуферОбмена.ParentWindow.ClipboardData.Getdata("Text");

КонецФункции // ПолучитьТекстИзБуфераОбмена()

#КонецОбласти // БуферОбмена 
