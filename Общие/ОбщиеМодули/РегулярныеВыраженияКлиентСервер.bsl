// Проверяет строку с использованием регулярного выражения без использования внешних компонент.
// Методика: https://infostart.ru/1c/articles/464971/
//
// Параметры:
//	Строка			 - Строка		 - Тестируемая строка
//	Фасет			 - Строка		 - Регулярное выражение
//	ФасетыПовтИсп	 - Соответствие	 - (служебный) Для повторного использования, ускорения массовой обработки. Элемент:
//		* Ключ		 - Строка			 - Фасет
//		* Значение	 - ОбъектXDTO
//
// Возвращаемое значение:
//	Булево - Если строка соответствует Фасету - Истина, в противном случае - Ложь.
//
Функция ПроверитьСтрокуРегулярнымВыражением(Строка, Фасет, ФасетыПовтИсп = Неопределено) Экспорт

	Если ФасетыПовтИсп = Неопределено Тогда
		ФасетыПовтИсп = Новый Соответствие;
	КонецЕсли;

	ТестирующийОбъект = ФасетыПовтИсп[Фасет];
	Если ТестирующийОбъект = Неопределено Тогда
	
		ПространствоИмен = "regexp-testing-namespace";
		ИмяОбъекта = "testObj";
		ИмяСвойства = "testProp";
		ШаблонМодели = 
		"<Model xmlns=""http://v8.1c.ru/8.1/xdto"" xmlns:xs=""http://www.w3.org/2001/XMLSchema"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:type=""Model"">
		|<package targetNamespace=""%1"">
		|<valueType name=""testType"" base=""xs:string"">
		|<pattern>%4</pattern>
		|</valueType>
		|<objectType name=""%2"">
		|<property xmlns:d4p1=""%1"" name=""%3"" type=""d4p1:testType""/>
		|</objectType>
		|</package>
		|</Model>";
		ТекстМодели = СтрШаблон(
			ШаблонМодели, 
			ПространствоИмен,	// %1
			ИмяОбъекта,			// %2
			ИмяСвойства,		// %3
			Фасет				// %4
		);

		Чтение = Новый ЧтениеXML;
		Чтение.УстановитьСтроку(ТекстМодели);

		Модель = ФабрикаXDTO.ПрочитатьXML(Чтение);
		ТестФабрикаXDTO = Новый ФабрикаXDTO(Модель);
		ТестПакетXDTO = ТестФабрикаXDTO.Пакеты.Получить(ПространствоИмен);
		ТестирующийОбъект = ТестФабрикаXDTO.Создать(ТестПакетXDTO.Получить(ИмяОбъекта));

		ФасетыПовтИсп[Фасет] = ТестирующийОбъект;

	КонецЕсли;

    Попытка
        ТестирующийОбъект[ИмяСвойства] = Строка;
        Возврат Истина;
    Исключение
        Возврат Ложь;
    КонецПопытки;
    
КонецФункции // ПроверитьСтрокуРегулярнымВыражением()
