// Формирует массив, состоящий из элементов коллекции.
//
// Параметры:
//  Коллекция - Произвольный - Любая коллекция, поддерживающая обход "Для Каждого ... Из ... Цикл".
//
// Возвращаемое значение:
//   Массив - Элементы коллекции.
//
Функция МассивИзКоллекции(Коллекция) Экспорт
	
	МассивЭлементов = Новый Массив;
	Для Каждого ТекущийЭлемент Из Коллекция Цикл
		МассивЭлементов.Добавить(ТекущийЭлемент);
	КонецЦикла;

	Возврат МассивЭлементов;

КонецФункции // МассивИзКоллекции

// Формирует соответствие из коллекции.
//
// Параметры:
//	Коллекция - Произвольный - Любая коллекция, поддерживающая обход "Для Каждого ... Из ... Цикл".
//	ПолеКлюча - Строка - Имя поля, которое будет использоваться в качестве ключа.
//	ПолеЗначения - Строка - Имя поля, которое будет использоваться в качестве значения.
//						Может содержать перечисление полей через запятую.
//						В этом случае значение будет представлять собой структуру с указанными полями.
//
// Возвращаемое значение:
//	Соответствие - Соответствие - Соответствие, сформированное из коллекции.
//
Функция СоответствиеИзКоллекции(Коллекция, ПолеКлюча, ПолеЗначения) Экспорт
	
	Соответствие = Новый Соответствие;

	ПолеЗначенияСодержитЗапятую = СтрНайти(ПолеЗначения, ",") > 0;
	Для Каждого ТекущийЭлемент Из Коллекция Цикл
		Ключ = ТекущийЭлемент[ПолеКлюча];
		Если ПолеЗначенияСодержитЗапятую Тогда
			Значение = Новый Структура(ПолеЗначения);
			ЗаполнитьЗначенияСвойств(Значение, ТекущийЭлемент, ПолеЗначения);
		Иначе
			Значение = ТекущийЭлемент[ПолеЗначения];
		КонецЕсли;
		Соответствие.Вставить(Ключ, Значение);
	КонецЦикла;

	Возврат Соответствие;

КонецФункции // СоответствиеИзКоллекции()

#Область HTML

// Формирует документ HTML по строке.
//
// Параметры:
//	Строка - Строка - Исходный текст с разметкой HTML.
//
// Возвращаемое значение:
//	ДокументHTML - Результирующий документ.
//
Функция ДокументHTMLИзСтроки(Строка)

	Чтение = Новый ЧтениеHTML;
	Чтение.УстановитьСтроку(Строка);
	Построитель = Новый ПостроительDOM;
	ДокументHTML = Построитель.Прочитать(Чтение);
	Чтение.Закрыть();

	Возврат ДокументHTML;
	
КонецФункции // ДокументHTMLИзСтроки()

// Извлекает текст из документа HTML
//
// Параметры:
//	ДокументHTML - ДокументHTML - Исходный документ
//
// Возвращаемое значение:
//	Строка - Извлеченный текст.
//
Функция СтрокаИзДокументаHTML(ДокументHTML)

	Запись = Новый ЗаписьHTML;
	Запись.УстановитьСтроку();
	Писатель = Новый ЗаписьDOM;
	Писатель.Записать(ДокументHTML, Запись);

	Возврат Запись.Закрыть();

КонецФункции // СтрокаИзДокументаHTML()

#КонецОбласти // HTML